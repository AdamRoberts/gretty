/*
Include this script in subprojects:
apply from rootProject.file('integrationTests.gradle')
*/

buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:1.0.0'
  }
}

apply plugin: 'groovy' // this is needed for spock

import org.akhikhl.gretty.AppAfterIntegrationTestTask
import org.akhikhl.gretty.AppBeforeIntegrationTestTask

ext {
  groovy_version = '2.3.3'
  logback_version = '1.1.2'
  spock_version = '0.7-groovy-2.0'
  gebVersion = '0.9.3'
  seleniumVersion = '2.42.2'
}

dependencies {
  testCompile "org.codehaus.groovy:groovy-all:$groovy_version"
  testCompile "org.spockframework:spock-core:$spock_version"
  testCompile "org.gebish:geb-spock:$gebVersion"
  testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
  testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
}

test {
  include '**/Test*.*'
  include '**/*Test.*'
  exclude '**/*IT.*'
}

task integrationTest(type: Test, dependsOn: 'test') {
  outputs.upToDateWhen { false }
  include '**/*IT.*'
  doFirst {
    systemProperty 'geb.build.reportsDir', reporting.file('geb')
  }
}

afterEvaluate {

  task 'integrationTestAllContainers'

  def integrationTestContainers = ext.has('integrationTestContainers') ? ext.integrationTestContainers : ['jetty7', 'jetty8', 'jetty9', 'tomcat7', 'tomcat8']

  for(def container in integrationTestContainers) {

    task('integrationTest_' + container, type: Test, dependsOn: 'test') {
      outputs.upToDateWhen { false }
      include '**/*IT.*'
      doFirst {
        systemProperty 'geb.build.reportsDir', reporting.file('geb')
      }
    }
    
    tasks.integrationTestAllContainers.dependsOn tasks['integrationTest_' + container]

    task('beforeIntegrationTest_' + container, type: AppBeforeIntegrationTestTask) {
      servletContainer = container
      integrationTestTask 'integrationTest_' + container
    }

    task('afterIntegrationTest_' + container, type: AppAfterIntegrationTestTask) {
      integrationTestTask 'integrationTest_' + container
    }  
  }

} // afterEvaluate

